# Configuration file for the Sphinx documentation builder.
#
# This file only contains a selection of the most common options. For a full
# list see the documentation:
# https://www.sphinx-doc.org/en/master/usage/configuration.html

# -- Path setup --------------------------------------------------------------

# If extensions (or modules to document with autodoc) are in another directory,
# add these directories to sys.path here. If the directory is relative to the
# documentation root, use os.path.abspath to make it absolute, like shown here.
#
import os
# import sys
# sys.path.insert(0, os.path.abspath('.'))


# -- Project information -----------------------------------------------------

project = 'Sphinxによるドキュメント雛形'
copyright = '2024 〇〇株式会社'
author = '名無しさん'
version = '1.0.0'
release = '1'

# -- General configuration ---------------------------------------------------

# Add any Sphinx extension module names here, as strings. They can be
# extensions coming with Sphinx (named 'sphinx.ext.*') or your custom
# ones.
extensions = [
    'sphinx.ext.autodoc',
    'sphinxcontrib.plantuml',
    'sphinxcontrib.bibtex',
    'myst_parser',
    'sphinxcontrib.mermaid'
]

# Add any paths that contain templates here, relative to this directory.
templates_path = ['_templates']

# The language for content autogenerated by Sphinx. Refer to documentation
# for a list of supported languages.
#
# This is also used if you do content translation via gettext catalogs.
# Usually you set "language" from the command line for these cases.
language = 'ja'

# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
# This pattern also affects html_static_path and html_extra_path.
exclude_patterns = []


# -- Options for HTML output -------------------------------------------------

# The theme to use for HTML and HTML Help pages.  See the documentation for
# a list of builtin themes.
#
html_theme = 'sphinx_rtd_theme'

# Add any paths that contain custom static files (such as style sheets) here,
# relative to this directory. They are copied after the builtin static files,
# so a file named "default.css" will overwrite the builtin "default.css".

#html_static_path = ['_static']

#plantuml='java -jar /usr/local/bin/plantuml.jar'
plantuml='java -jar {0}'.format(os.environ['PLANTUML_JAR_PATH'])
plantuml_output_format = 'svg'
plantuml_latex_output_format = 'pdf'

source_suffix = ['.rst', '.md']

latex_elements = {
  'preamble': r'''
\usepackage{colortbl}
\pagestyle{plain}
\thispagestyle{plain}
\pagenumbering{arabic}
\addtocounter{page}{1}
''',
'papersize': 'a4paper',
'extraclassoptions': 'openany,oneside',
'makeindex': '',  # 索引ページは生成しない
'printindex': '', # 索引ページは生成しない
}

latex_docclass = {
    'howto': 'jsarticle',
}

tex_filename = f"{project.replace(' ', '')}_{version}_{release}.tex"
latex_documents = [('index', tex_filename, project, author, 'howto')]

bibtex_bibfiles = ['4_bibliography/references.bib']
bibtex_default_style = 'unsrt'

numfig = True
numfig_format = { 'section': '%s',
                  'figure': '図 %s',
                  'table': '表 %s',
                  'code-block': 'リスト %s'}

latex_engine = "platex"
latex_use_xindy = False
latex_toplevel_sectioning='section'

# To avoid bibliograpy section put in separate page, apply this workaround
# https://readthedocs.org/projects/sphinxcontrib-bibtex/downloads/pdf/latest/
import sphinx.builders.latex.transforms
class DummyTransform(sphinx.builders.latex.transforms.BibliographyTransform):
  def run(self, **kwargs):
    pass
sphinx.builders.latex.transforms.BibliographyTransform = DummyTransform
